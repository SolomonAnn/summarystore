data-dir = "/mnt/md0/sstore"                # where we store SummaryStore (RocksDB) data
results-dir = "results"             # where we store experiment output
window-cache-size = 10_000_000       # number of windows to cache in memory
ingest-buffer-size = 2_000_000      # number of values to buffer before triggering merge

# List of decay functions. Allowed vals: exponentialBASE, rationalPowerP,Q,R,S
# TODO: consider specifying each decay as a map, instead of encoding into string
decay-functions = [
    #"exponential2",
    #"rationalPower1,1,1,2", # 100x
    "rationalPower1,1,1,3", # 100x
    #"rationalPower1,1,2,1",
    #"rationalPower1,1,4,1",
    #"rationalPower1,1,10,1",
    "rationalPower1,1,12,1",
]

# List of operators to maintain in each SummaryStore
# (names of classes in the com.samsung.sra.DataStore.Aggregates package)
operators = ["SimpleCountOperator", "SumOperator", "BloomFilterOperator1,1000", "CMSOperator1,2500"]


# Dataset (stream generator) specification
[data]
dimensionality = 1
tstart = 0                                   # all queries/data will span [tstart, tend]
tend = 100_000_000_000
stream-generator = "RandomStreamGenerator"   # name of class in the com.samsung.sra.DataStoreExperiments package
##interarrivals = {distribution = "ExponentialDistribution", lambda = 0.1}
interarrivals = {distribution = "ParetoDistribution", xm = 1.666667, alpha = 1.2} # avg 10
values = {distribution = "UniformDistribution", min = 1, max = 100}
random-seed = 0                              # RandomStreamGenerator seed. Optional, defaults to 0
#stream-generator = "BinStreamGenerator"
#file = "/mnt/md0/task_usage.bin"
#tstart = 0
#tend = 25055980000350 # 290 days, values in us
#repeat = 10

# Workload specification
[workload]
workload-generator = "Sec2WorkloadGenerator"
count-operator-index = 0


[performance]
# Process queries in parallel when generating workload. Adds a couple of
# minutes of stream management overhead, only recommended in large streams
parallel-workload-gen = false   # optional, default false
# TODO: drop kernel page/inode/dentries caches before starting RunComparison
drop-caches = false            # optional, default false
