syntax = "proto2";
package com.samsung.sra.protocol;
option java_package = "com.samsung.sra.protocol";

// Schema: every aggregate object must be one possibility in the (tagged) union
//         type ProtoOperator. When defining a new operator, you will need to
//         either reuse an existing entry in ProtoOperator for it, or add a new
//         entry.

// by itself just a bitset; used by BloomFilters for now, but potentially others
message ProtoBitset {
    // TODO: is repeated redundant here? bytes is already an arbit length bytestring
    repeated bytes bitsetbytes = 1;
}

// TODO: filtersize and numhashes are fixed for a stream. Don't need here, can
//       store once per stream in the Operator object
message ProtoSimpleBloomFilter {
    required int32 filtersize = 1;
    required int32 numhashes = 2;
    required ProtoBitset bitset = 3;
}

message ProtoCMS {
    required int64 size = 1;
    repeated int64 hashA = 2;  // long[depth]
    message Row {
        repeated int64 cell = 1; // long[width]
    }
    repeated Row row = 3; // row[depth] == long[depth][width]
}

// ProtoOperator = union { long, ProtoBloomFilter, ProtoCMS, ... }
message ProtoOperator {
    oneof operator {
        int64 long = 1; // e.g. sum, count
        ProtoSimpleBloomFilter bloom_filter = 2;
        ProtoCMS cms = 3;
    }
}

// the superset; this is the whole bucket
message ProtoBucket {
    required int64 thisBucketid = 1;
    optional int64 prevBucketID = 2;
    optional int64 nextBucketID = 3;
    optional int64 tStart = 4;
    optional int64 tEnd = 5;
    optional int64 cStart = 6;
    optional int64 cEnd = 7;
    repeated ProtoOperator operator = 8;
}
